#!/bin/bash

run_brew() {

    # Check for Homebrew
    if type_exists 'brew'; then
        e_header "Updating Homebrew..."
        # Use the latest version of Homebrew
        brew update
        [[ $? ]] && e_success "Done"

        e_header "Updating any existing Homebrew formulae..."
        # Upgrade any already-installed formulae
        brew upgrade
        [[ $? ]] && e_success "Done"
        
        e_header "Installing Brew Cask in order to install major software (i.e Chrome, Firefox, Filezilla, etc)"
        brew install caskroom/cask/brew-cask 2> /dev/null
        [[ $? ]] && e_success "Done"

        e_header "Checking status of desired Homebrew formulae..."
        local list_formulae
        local -a missing_formulae
        local -a desired_formulae=(
            'coreutils' # GNU core utilities (those that come with OS X are outdated)
            'git'
            'the_silver_searcher'
            'bash' # Install Bash 4
            'bash-completion'
            'ffmpeg'
            'graphicsmagick'
            'jpeg'
            'node'
            'optipng'
            'tree'
            'wget'
        )
        
        # From this point onwards, all programs below are added by me
        e_header "Checking status of desired useful Utilities..."
        local -a useful_utilities=(
            'findutils' # Install GNU `find`, `locate`, `updatedb`, and `xargs`, `g`-prefixed.
            'gnu-sed --with-default-names' # Install GNU `sed`, overwriting the built-in `sed`.
            'wget --with-iri' # Install `wget` with IRI support.
            'gnupg' # Install GnuPG to enable PGP-signing commits.
            'tree'
            'p7zip'
        )
        
        e_header "Checking status of most recent versions of MacOS Tools..."
        local -a recent_version_macos_tools=(
            'vim --with-override-system-vi'
            'grep'
            'openssh'
            'screen'
            'php'
            'gmp'
        )
        
        e_header "Checking status of desired Font Fonts..."
        local -a font_tools=(
            'bramstein/webfonttools'
            'sfnt2woff'
            'sfnt2woff-zopfli'
            'woff2'
        )
        
        e_header "BOOM BOOM! - Heavy Armor inbound...\nChecking status desired Security & Hacking related tools"
        # The Best Security-related Tools
        local -a ctf_security_tools=(
            'aircrack-ng'
            'bfg'
            'binutils'
            'binwalk'
            'cifer'
            'dex2jar'
            'dns2tcp'
            'fcrackzip'
            'foremost'
            'hashpump'
            'hydra'
            'john'
            'knock'
            'netpbm'
            'nmap'
            'pngcheck'
            'socat'
            'sqlmap'
            'tcpflow'
            'tcpreplay'
            'tcptrace'
            'ucspi-tcp' # `tcpserver` etc.
            'xpdf'
            'xz'
        )

        for index in ${!desired_formulae[*]}
        do
            if ! formula_exists ${desired_formulae[$index]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
            fi
        done
        
        for index in ${!useful_utilities[*]}
        do
            if ! formula_exists ${useful_utilities[$index]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${useful_utilities[$index]}")
            fi
        done
        
        for index in ${!recent_version_macos_tools[*]}
        do
            if ! formulae_exists ${recent_version_macos_tools[$index]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@}" "${recent_version_macos_tools[$index]}")
            fi
        done
        
        for index in ${!font_tools[*]}
        do
            if ! formulae_exists ${font_tools[*]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${font_tools[$index]}")
            fi
        done
        
        for index in ${!ctf_security_tools[*]}
        do
            if ! formulae_exists ${ctf_security_tools[*]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${ctf_security_tools[$index]}")
            fi
        done

        if [[ "$missing_formulae" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            list_formulae=$( printf "%s " "${missing_formulae[@]}" )

            e_header "Installing missing Homebrew formulae..."
            # Install all missing formulae
            brew install $list_formulae

            [[ $? ]] && e_success "Done"
        fi

        # use latest rsync rather than out-dated OS X rsync
        # install separately from the main formulae list to fix gh-19
        e_header "Installing latest version of rsync"
        brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/rsync.rb

        # Remove outdated versions from the Cellar
        brew cleanup
    else
        printf "\n"
        e_error "Error: Homebrew not found."
        printf "Aborting...\n"
        exit
    fi

}

# Will install additional software (casks) from /lib/lists file that the user specifies.
run_brew_additional_software() {

        if ! formula_exists $1; then
            e_header "Cask to install: $1"
            brew cask install $1
            [[ $? ]] && e_success "Done"
        else
            e_header "Cask: $1 already installed"
        
}
